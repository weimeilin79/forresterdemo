<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2014 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
	
	
	<cxf:cxfEndpoint id="customerEndpoint" address="http://52.38.191.16:9292/CamelContext/CustomerService"
            wsdlURL="http://52.38.191.16:9292/CamelContext/CustomerService?wsdl"
            serviceClass="com.redhat.sap.CustomerServiceImpl"/>
        
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:salesforceconfig.properties</value>
		</property>
	</bean>
	<bean id="salesforce"
		class="org.apache.camel.component.salesforce.SalesforceComponent">

		<property name="loginConfig">
			<bean class="org.apache.camel.component.salesforce.SalesforceLoginConfig">
				<property name="loginUrl" value="${loginUrl}"></property>
				<property name="userName" value="${userName}"></property>
				<property name="password" value="${password}"></property>
				<property name="clientId" value="${clientId}"></property>
				<property name="clientSecret" value="${clientSecret}"></property>
			</bean>
		</property>
		<property name="config">
			<bean
				class="org.apache.camel.component.salesforce.SalesforceEndpointConfig">
				<property name="sObjectName" value="${sObjectName}"></property>
				<property name="sObjectClass" value="${sObjectClass}"></property>
			</bean>
		</property>
		<property name="packages" value="${sObjectDTOPackages}"></property>
	</bean>
	
	<bean id="mySAPResult" class="com.redhat.sap.SAPResult" />
	<bean id="flightCustomerCreateReq" class="com.redhat.sap.req.FlightCustomerCreateReq" />
	
 <camelContext xmlns="http://camel.apache.org/schema/spring" xmlns:BAPI_FLCUST_CREATEFROMDATA="http://sap.fusesource.org/rfc/A4H/BAPI_FLCUST_CREATEFROMDATA">
  <endpoint uri="dozer:CustomerDataTransform?sourceModel=org.apache.camel.salesforce.dto.Account&amp;targetModel=com.redhat.sap.req.CustomerData&amp;mappingFile=transformation.xml" id="CustomerDataTransform"/>
  
  <route id="oppchangelistener">
    <from uri="salesforce:CamelTestTopic?notifyForOperationUndelete=true&amp;notifyForFields=ALL&amp;sObjectName=Opportunity&amp;updateTopic=true&amp;sObjectQuery=SELECT id,name,AccountId,StageName from Opportunity"/>
    <marshal>
      <json prettyPrint="true" library="Jackson"/>
    </marshal>
    <log message="Query result back from Salesforce: ${body}"/>
    <setHeader headerName="accountID">
      <jsonpath>accountId</jsonpath>
    </setHeader>
    <log message="accountId: ${headers.accountID}"/>
    <setHeader headerName="stageName">
      <jsonpath>stageName</jsonpath>
    </setHeader>
    <choice>
      <when>
        <simple>${headers.stageName} == 'CLOSED_WON'</simple>
        <to uri="direct:getAccount"/>
      </when>
    </choice>
  </route>
  
  <route id="getAccount">
    <from uri="direct:getAccount"/>
    <setHeader headerName="sObjectId">
      <simple>${headers.accountID}</simple>
    </setHeader>
    <to uri="salesforce:getSObject?sObjectName=Account"/>
    <log message="Query Account back from Salesforce: ${body}"/>
    <to ref="CustomerDataTransform"/>
    <bean ref="flightCustomerCreateReq" method="setCustomerData"/>
    <unmarshal>
      <jaxb contextPath="com.redhat.sap.req" prettyPrint="true"/>
    </unmarshal>
    <convertBodyTo type="java.lang.String"/>
	<transform> 
	  <simple>${body.replaceAll(",", "ï¼Œ")}</simple> 
	</transform> 
    <log message="XML to SAP : ${body}"/>
    <to uri="cxf:bean:customerEndpoint" />
  </route>
</camelContext>

</beans>
